using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace InterfaceHierarchy
{
    class Program
    {
        static void Main(string[] args)
        {
            Worker worker = new Worker();
            worker.DeveloperWebApplication();
            worker.DeveloperApplication();
            //явное переведение
            ((Worker)worker).DeveloperApplication();
            ((Worker)worker).DeveloperWebApplication();
            ((IDeveloper)worker).DeveloperApplication();//так как этот интерфейс наследуемый. он не видит другого интерфейса
            ((ISkilledDeveloper)worker).DeveloperWebApplication();
            ((ISkilledDeveloper)worker).DeveloperApplication();
        }
    }

   //создадим класс рабочий
    class Worker:ISkilledDeveloper
    {
        public void DeveloperApplication()
        {
            // .....
        }

        public void DeveloperWebApplication()
        {
            // .....
        }
    }
    //создаем интерфейс разработчика
    interface IDeveloper
    {
        //напишем метод для разработчика
        void DeveloperApplication();
    }
    //создаем интерфейс опытного разработчика
    interface ISkilledDeveloper:IDeveloper //делаем наследуемый класс
    {
        void DeveloperWebApplication();
    }
}
